name: Create deb packages

on:
  workflow_call:

jobs:
  build_debian:
    runs-on: ubuntu-latest
    name: Build Debian Packages
    steps:
      - uses: actions/checkout@v4
        with:
          repository: open-gpdb/gpdb
          ref: 6_jammy_github
          path: gpdb/greenplum-build

      - name: Checkout code
        uses: actions/checkout@v4

      - name: prepare environment
        run: |
          apt-get update
          apt-get install -y python3 devscripts debhelper dupload git pbuilder ca-certificates reprepro debsigs

      - name: generate debian, Dockerfile, etc.
        run: |
          set -ex
          
          cat > changelog.sh <<EOF1
          cat <<EOF
          greenplum-db-6 (\${GPDB_PKG_VERSION}) stable; urgency=low
          
            * open-gpdb autobuild
          -- ${BUILD_USER} <${BUILD_USER}@$(hostname)>  $(date +'%a, %d %b %Y %H:%M:%S %z')
          EOF
          EOF1
          chmod +x changelog.sh
          
          cat > make_deb.sh <<EOF
          #!/bin/bash
          
          export GPDB_VERSION=\$(gpdb/getversion | cut -d'.' -f 1)
          export GPDB_FULL_VERSION=\$(gpdb/getversion | cut -d'-' -f 1 | cut -d'+' -f 1)
          export GPDB_PKG_VERSION=\${GPDB_FULL_VERSION}-${BUILD_NUMBER}-yandex.\$(git --git-dir=./gpdb/.git rev-list HEAD --count).\$(git --git-dir=./gpdb/.git rev-parse --short HEAD)
          echo "##teamcity[buildNumber '%build.counter%: \${GPDB_PKG_VERSION}']"
          
          ./changelog.sh > gpdb/debian/changelog
          cd gpdb && cat debian/changelog
          mk-build-deps  --build-dep --install --tool='apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes' debian/control
          dpkg-buildpackage -us -uc
          EOF
          chmod +x make_deb.sh

      - name: build and sign
        run: |
          set -ex
          
          ls ..
          
          # export GNUPGHOME="$(mktemp -d)"
          # gpg --import /etc/yandex/robot-yc-infra/gpg/gpg_private
          # gpg --list-secret
          
          [[ -z ${DOCKER_TAG} ]] && DOCKER_TAG=lolkekcheburek
          docker build --build-arg POSTGRES_VERSION=${POSTGRES_VERSION}  -f ./gpdb/greenplum-build/Dockerfile . --tag ${DOCKER_TAG}:1.0 --progress=plain && docker run ${DOCKER_TAG}:1.0
          docker cp $(docker ps -a | grep ${DOCKER_TAG}  | awk '{print $1}' | head -1):/root/ ./package-build
          cd package-build
          
          keyVal=$(gpg --list-keys | head -4 | tail -1)
          echo "$keyVal"
          all_debs=$(ls *deb)


      - name: Get Debian Package name
        id: get-package-name
        run: |
          set -ex
          
          ls -la package-build
          cd package-build
          
          deb_file=$(ls *.deb)
          
          echo "package_name=${deb_file}" >> "$GITHUB_OUTPUT"


      - name: Upload Debian Package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get-package-name.outputs.package_name }}
          path: |
            package-build/${{ steps.get-package-name.outputs.package_name }}

      - name: Upload Everything
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get-package-name.outputs.package_name }}-evr
          path: |
            package-build/${{ steps.get-package-name.outputs.package_name }}

  test_debian:
    runs-on: ubuntu-latest
    name: Test Debian Package
    needs: [build_debian]
    steps:

      - uses: actions/checkout@v4

      - name: Download Debian Package
        uses: actions/download-artifact@v4
        with:
          name: ${{needs.build_debian.outputs.package_name}}

      - name: Get Debian Package name
        id: get-package-name
        run: |
          set -ex
          
          ls -l
          
          echo "deb1 - ${{needs.build_debian.outputs.package_name}}"
          
          DEB_FILE="${{needs.build_debian.outputs.package_name}}"
          
          echo "deb2 - $DEB_FILE"
          
          [[ -z ${DOCKER_TAG} ]] && DOCKER_TAG=lolkekcheburek
          docker build --build-arg POSTGRES_VERSION=${POSTGRES_VERSION}  -f ./docker/test_package/Dockerfile . --tag ${DOCKER_TAG}:1.0 --progress=plain 
          docker run -e DEB_FILE=$DEB_FILE ${DOCKER_TAG}:1.0
