name: PXF CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_gpdb_debs:
    name: Build open-gpdb Debian Packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: # make targets
          - 'deb-gpdb-bionic'
          - 'deb-gpdb-jammy'
          - 'deb-cbdb-jammy'
    steps:
      - name: database deb files caching
        id: cache-debs
        uses: actions/cache@v4
        with:
          path: ./downloads/*.deb
          # save per-os with 7 days TTL
          key: ${{ runner.os }}-${{ matrix.target }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build open-gpdb / cloudberry
        if: steps.cache-debs.outputs.cache-hit != 'true'
        run: make -f package/Makefile ${{ matrix.target }}

  build_pxf_debs:
    name: Build PXF Debian Packages
    runs-on: ubuntu-latest
    needs: [build_gpdb_debs]
    strategy:
      fail-fast: false
      matrix:
        target: # make targets
          - pxf: 'deb-pxf6-gpdb-bionic'
            db-cache-key-sfx: 'deb-gpdb-bionic'
          - pxf: 'deb-pxf6-gpdb-jammy'
            db-cache-key-sfx: 'deb-gpdb-jammy'
          - pxf: 'deb-pxf6-cbdb-jammy'
            db-cache-key-sfx: 'deb-cbdb-jammy'
    steps:
      - name: (restore) database deb files caching
        id: cache-debs
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: true
          path: ./downloads/*.deb
          key: ${{ runner.os }}-${{ matrix.target.db-cache-key-sfx }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build PXF6
        if: steps.cache-debs.outputs.cache-hit != 'true'
        run: make -f package/Makefile ${{ matrix.target.pxf }}
